apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: deployment-pipeline
spec:
  arguments:
    parameters:
      - name: source-folder
      - name: tag
      - name: repo-name
      - name: source-repo-url
      - name: registry-address
      - name: registry-username
      - name: registry-password-env
  entrypoint: ci
  volumes:
    - name: deployment-pipeline
      persistentVolumeClaim:
        claimName: deployment-pipeline
  templates:
    - name: ci
      dag:
        tasks:
          - name: clone-source
            template: clone-soure-repo
          - name: clone-deployment
            template: clone-deployment-pipeline
          - name: ci
            template: dagger-ci
            dependencies:
              - clone-source
              - clone-deployment
    - name: clone-soure-repo
      container:
        image: alpine/git
        command: ["sh", "-c"]
        args:
          - git clone https://$GITHUB_TOKEN@{{workflow.parameters.source-repo-url}} /source-repo
      volumeMounts:
        - name: source-repo
          mountPath: /source-repo
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-pat
              key: token
    - name: clone-deployment-pipeline
      container:
        image: alpine/git
        command: ["sh", "-c"]
        args:
          - git clone https://$GITHUB_TOKEN@github.com/simonbrundin/deployment-pipeline.git /deployment-pipeline
      volumeMounts:
        - name: deployment-pipeline
          mountPath: /deployment-pipeline
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-pat
              key: token
    - name: dagger-ci
      volumeMounts:
        - name: deployment-pipeline
          mountPath: /deployment-pipeline
        - name: source-repo
          mountPath: /source-repo
      container:
        image: alpine:3.19
        command: [sh, -c]
        args:
          - |
            apk add --no-cache curl tar bash
            curl -L https://github.com/dagger/dagger/releases/download/v0.18.17/dagger_v0.18.17_linux_amd64.tar.gz \
              | tar xz -C /usr/local/bin
            cd /deployment-pipeline/dagger-modules/pipeline
            dagger call ci \
              --image-name {{workflow.parameters.repo-name}} \
              --registry-address {{workflow.parameters.registry-address}} \
              --source-dir /source-repo/{{workflow.parameters.source-folder}} \
              --tag {{workflow.parameters.tag}} \
              --username {{workflow.parameters.registry-username}} \
              --secret ${{workflow.parameters.registry-password-env}}
        env:
          - name: DAGGER_SESSION_HOST
            value: "127.0.0.1:8080"
          - name: DAGGER_CLOUD_TOKEN
            valueFrom:
              secretKeyRef:
                name: dagger-cloud
                key: token
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-pat
                key: token
      sidecars:
        - name: dagger-engine
          image: registry.dagger.io/engine:v0.18.17
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /query
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 2
